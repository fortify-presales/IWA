<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.microfocus.example</groupId>
    <artifactId>iwa</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>
    <packaging>${packaging.type}</packaging>
    <description>Insecure Web App (IWA) Pharmacy Direct</description>

    <licenses>
        <license>
            <name>GNU General Public License</name>
            <url>https://opensource.org/licenses/gpl-license</url>
        </license>
    </licenses>

	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
		<fod.dir>fod</fod.dir>
        <h2.version>2.1.210</h2.version>
        <passay.version>1.5.0</passay.version>
        <bootstrap.version>4.5.3</bootstrap.version>
        <jquery.version>3.5.1</jquery.version>
        <font-awesome.version>5.15.2</font-awesome.version>
        <chartjs.version>2.9.4</chartjs.version>
        <axios.version>0.21.1</axios.version>
        <springdoc-openapi.version>1.4.3</springdoc-openapi.version>
        <jwt.version>0.9.1</jwt.version>
        <jackson.version>2.13.0</jackson.version>
        <groovy.version>3.0.8</groovy.version>
        <selenium.version>4.0.0-rc-2</selenium.version>
        <junit.version>4.12</junit.version>
        <fortify.version>21.2.3</fortify.version>
        <skip.unit.tests>true</skip.unit.tests>
        <skip.integration.tests>true</skip.integration.tests>
    </properties>

	<dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>compile</scope>
            <version>${h2.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-email</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>30.1.1-jre</version>
        </dependency>

        <dependency>
            <groupId>org.passay</groupId>
            <artifactId>passay</artifactId>
            <version>${passay.version}</version>
        </dependency>

        <!-- css/javascript webjars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${bootstrap.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${jquery.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>font-awesome</artifactId>
            <version>${font-awesome.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>chartjs</artifactId>
            <version>${chartjs.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars.npm</groupId>
            <artifactId>axios</artifactId>
            <version>${axios.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-security</artifactId>
            <version>${springdoc-openapi.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>com.twilio.sdk</groupId>
            <artifactId>twilio</artifactId>
            <version>8.17.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.12</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${groovy.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>2.6.0</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jwt.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-http</artifactId>
            <version>3.4.1</version>
        </dependency>

        <dependency>
            <groupId>com.github.cliftonlabs</groupId>
            <artifactId>json-simple</artifactId>
            <version>2.3.1</version>
        </dependency>

        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>1.18</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20201115</version>
        </dependency>

        <!-- Fortify SCA Annotations
        <dependency>
            <groupId>com.microfocus.fortify</groupId>
            <artifactId>FortifyAnnotations</artifactId>
            <version>${fortify.version}}</version>
        </dependency-->

    </dependencies>

    <profiles>
        <!-- Default profile for testing/debugging with Spring Boot DevTools -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>

		<profile>
			<id>release</id>
            <!-- TBD -->
		</profile>

        <!-- Profile for creating executable JAR file -->
        <profile>
            <id>jar</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <packaging.type>jar</packaging.type>
            </properties>
        </profile>

        <!-- Profile for creating deployable WAR file -->
        <profile>
            <id>war</id>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
        </profile>

		<!-- Example profile for preparing files for Fortify scans -->
        <!-- Note: recommended approach now is to use ScanCentral Client Tool for packaging -->
        <profile>
            <id>fortify</id>
            <properties>
                <packaging.type>war</packaging.type>
            </properties>
            <build>
                <resources>
                    <resource>
                        <directory>src/main/configs</directory>
                    </resource>
                    <resource>
                        <filtering>false</filtering>
                        <directory>src/main/configs</directory>
                        <includes>
                            <include>**/*.*</include>
                        </includes>
                        <excludes>
                            <exclude>**/*.java</exclude>
                        </excludes>
                    </resource>
                </resources>
                <plugins>
                    <!-- Download and copy all dependencies on "verify" phase for Fortify On Demand -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>3.1.1</version>
                        <executions>
                            <execution>
                                <id>download-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>sources</goal>
                                </goals>
                                <configuration>
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <excludeGroupIds>
                                        junit,org.easymock,${project.groupId}
                                    </excludeGroupIds>
                                    <!-- uncomment to only include direct dependencies -->
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>target/classes/lib</outputDirectory>
                                    <!--classifier>sources</classifier-->
                                    <overWriteIfNewer>true</overWriteIfNewer>
                                    <excludeGroupIds>
                                        junit,org.easymock,${project.groupId}
                                    </excludeGroupIds>
                                    <!-- uncomment to only include direct dependencies -->
                                    <excludeTransitive>false</excludeTransitive>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <verbose>true</verbose>
                            <detail>true</detail>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </plugin>
                    <!-- Create a source bundle (.jar) for Fortify on Demand
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin-->
                    <!-- Copy minimal set of files to FOD upload directory -->
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>copy-fortify-resources</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/${fod.dir}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/</directory>
                                            <includes>
                                                <include>src/**/*</include>
                                                <include>pom.xml</include>
                                                <include>Dockerfile*</include>
                                                <include>docker-compose.yml</include>
                                            </includes>
                                            <excludes>
                                                <!-- exclude test source code -->
                                                <exclude>src/test/**/*</exclude>
                                            </excludes>
                                        </resource>
                                        <!-- include third party dependencies -->
                                        <resource>
                                            <directory>${basedir}/target/classes/lib</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>

    <build>

        <plugins>

            <!-- Display active profile in compile phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-help-plugin</artifactId>
                <executions>
                    <execution>
                        <id>show-profiles</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>active-profiles</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Set Spring Boot default profile to "dev" -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-info</id>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${project.artifactId}</finalName>
                    <!--outputFile>${project.build.directory}/${project.artifactId}.war</outputFile-->
                    <profiles>
                        <profile>dev</profile>
                    </profiles>
                </configuration>
            </plugin>

            <!-- Unpack dependencies for potential upload to FOD -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>build-classpath</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <!-- configure the plugin here -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-sources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                            <!-- causes unpacking error -->
                            <excludeArtifactIds>bootstrap,jquery</excludeArtifactIds>
                            <excludeTransitive>true</excludeTransitive>
                            <classifier>sources</classifier>
                            <type>jar</type>
                            <outputDirectory>target/dependency</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Cleanup FOD upload directory -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>${fod.dir}</directory>
                        </fileset>
                        <fileset>
                            <directory>src/main/ui/dist</directory>
                        </fileset>
                        <fileset>
                            <directory>target</directory>
                        </fileset>
                        <fileset>
                            <directory>target/classes</directory>
                        </fileset>
                    </filesets>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-target-directory</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Run Unit Tests via surefire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <skipTests>${skip.unit.tests}</skipTests>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/PasswordConstraintValidatorTest*.java</exclude>
                        <!--exclude>**/*IT.java</exclude-->
                    </excludes>
                </configuration>
            </plugin>

            <!-- Run Selenium Integration Tests via failsafe plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <skipTests>${skip.integration.tests}</skipTests>
                    <excludes>
                        <exclude>**/IT*.java</exclude>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*ITCase.java</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <!--configuration>
                            <excludes>
                                <exclude>**/*ControllerTest.java</exclude>
                                <exclude>**/PasswordConstraintValidatorTest*.java</exclude>
                            </excludes>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration-->
                    </execution>
                </executions>
            </plugin>

            <!-- Generate OpenAPI descriptor during integrate phase -->
            <!-- Requires application to be running: "mvn spring-boot:run" and then "mvn integration-test" -->
            <!--
            <plugin>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <apiDocsUrl>http://localhost:9080/iwa/v3/api-docs</apiDocsUrl>
                    <outputFileName>openapi.json</outputFileName>
                    <outputDir>etc</outputDir>
                </configuration>
            </plugin>
            -->

            <!-- Example Deployment to Heroku -->
            <plugin>
                <groupId>com.heroku.sdk</groupId>
                <artifactId>heroku-maven-plugin</artifactId>
                <version>3.0.2</version>
                <configuration>
                    <appName>insecurewebapp</appName>
                    <jdkVersion>1.8</jdkVersion>
                    <warFile>${project.build.directory}/${project.artifactId}.war</warFile>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
